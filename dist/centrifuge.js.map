{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a155f0fd08e04af5f1e0","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js"],"names":["_errorTimeout","Centrifuge","url","options","_url","_promise","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_subs","_lastPubUID","_messages","_isBatching","_isAuthBatching","_authChannels","_numRefreshFailed","_refreshTimeout","_pingInterval","_pongTimeout","_retries","_callbacks","_latency","_latencyStart","_connectData","_credentials","_config","debug","sockjs","promise","retry","maxRetry","timeout","resubscribe","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","authEndpoint","authHeaders","authParams","onAuth","_configure","credentials","data","params","headers","callback","self","query","_debug","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","JSON","parse","responseText","e","_log","setTimeout","send","stringify","arguments","WebSocket","format","_formatOverride","Error","configuration","Object","assign","Promise","indexOf","_setFormat","SockJS","newStatus","interval","reconnect","uid","callbacks","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_setSubscribing","_setUnsubscribed","commands","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","transport","onheartbeat","_restartPing","_resetRetry","msg","Date","_call","then","result","_connectResponse","decodeCommandResult","CONNECT","_disconnect","onerror","error","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_connect","call","onmessage","replies","decodeReplies","_dispatchReply","method","RPC","resolve","reject","SEND","_callAsync","_addMessage","id","_registerCall","isConnected","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","clearTimeout","emit","close","_refreshFailed","cb","_refresh","Math","round","random","user","exp","info","sign","REFRESH","_refreshResponse","context","_ajax","_setNew","SUBSCRIBE","startAuthBatching","_subscribe","stopAuthBatching","recover","_recover","last","_getLastID","_subscribeResponse","err","_subscribeError","UNSUBSCRIBE","_getSub","getTime","expires","isExpired","expired","client","ttl","startBatching","_shouldResubscribe","stopBatching","ctx","latency","clearInterval","setInterval","_stopPing","_startPing","_isSubscribing","code","message","_setSubscribeError","pubs","publications","reverse","_handlePublication","recovered","_setSubscribeSuccess","reply","join","leave","unsubscribe","pub","push","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","undefined","_handleReply","_handlePush","messages","slice","_transportSend","PING","lastUID","errObject","async","_nextMessageId","_isConnected","_ping","flush","_flush","authChannels","channels","body","batch","channelResponse","events","currentSub","_setEvents","_isUnsubscribed","subscribe","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","Subscription","centrifuge","_centrifuge","_error","_isResubscribe","_recovered","_ready","_noResubscribe","_initializePromise","_resolve","value","_reject","on","prototype","toString","knownEvents","l","ev","successContext","_getSubscribeSuccessContext","errContext","_getSubscribeErrorContext","noResubscribe","needTrigger","isResubscribe","subscribeErrorContext","_unsubscribe","_methodCall","PUBLISH","PRESENCE","PRESENCE_STATS","HISTORY","JsonMethodType","JsonPushType","JsonEncoder","encodedCommands","JsonDecoder","encodedReplies","split","methodType","pushType","startsWith","prefix","lastIndexOf","isString","String","isFunction","log","level","args","console","logger","apply","backoff","step","min","max","jitter","pow","floor","errorExists"],"mappings":"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AC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;;;ACpBA;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC7SO,IAAM4P,kCAAa,SAAbA,UAAa,CAAU/B,KAAV,EAAiBgC,MAAjB,EAAyB;AACjD,SAAOhC,MAAMiC,WAAN,CAAkBD,MAAlB,EAA0B,CAA1B,MAAiC,CAAxC;AACD,CAFM;;AAIA,IAAME,8BAAW,SAAXA,QAAW,CAAUlC,KAAV,EAAiB;AACvC,MAAIA,UAAUxC,SAAV,IAAuBwC,UAAU,IAArC,EAA2C;AACzC,WAAO,KAAP;AACD;AACD,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,iBAAiBmC,MAArD;AACD,CALM;;AAOA,IAAMC,kCAAa,SAAbA,UAAa,CAAUpC,KAAV,EAAiB;AACzC,MAAIA,UAAUxC,SAAV,IAAuBwC,UAAU,IAArC,EAA2C;AACzC,WAAO,KAAP;AACD;AACD,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD,CALM;;AAOA,IAAMqC,oBAAM,SAANA,GAAM,CAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACxC,MAAI5P,OAAO6P,OAAX,EAAoB;AAClB,QAAMC,SAAS9P,OAAO6P,OAAP,CAAeF,KAAf,CAAf;;AAEA,QAAIF,WAAWK,MAAX,CAAJ,EAAwB;AACtBA,aAAOC,KAAP,CAAa/P,OAAO6P,OAApB,EAA6BD,IAA7B;AACD;AACF;AACF,CARM;;AAUA,IAAMI,4BAAU,SAAVA,OAAU,CAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AAC/C,MAAIC,SAAS,MAAM3J,KAAKE,MAAL,EAAnB;AACA,MAAIvE,WAAW8N,MAAMzJ,KAAK4J,GAAL,CAAS,CAAT,EAAYJ,OAAO,CAAnB,CAArB;;AAEA,MAAI7N,WAAW+N,GAAf,EAAoB;AAClB/N,eAAW+N,GAAX;AACD;AACD,SAAO1J,KAAK6J,KAAL,CAAW,CAAC,IAAIF,MAAL,IAAehO,QAA1B,CAAP;AACD,CARM;;AAUA,IAAMmO,oCAAc,SAAdA,WAAc,CAAU/Q,IAAV,EAAgB;AACzC,SAAO,WAAWA,IAAX,IAAmBA,KAAK8E,KAAL,KAAe,IAAzC;AACD,CAFM,C","file":"centrifuge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a155f0fd08e04af5f1e0","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  isString,\n  log,\n  startsWith,\n  errorExists,\n  backoff\n} from './utils';\n\nconst _errorTimeout = 'timeout';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._promise = null;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._subs = {};\n    this._lastPubUID = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isAuthBatching = false;\n    this._authChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingInterval = null;\n    this._pongTimeout = null;\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._credentials = null;\n    this._config = {\n      debug: false,\n      sockjs: null,\n      promise: null,\n      retry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      resubscribe: true,\n      ping: true,\n      pingInterval: 30000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 3000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      authEndpoint: '/centrifuge/auth',\n      authHeaders: {},\n      authParams: {},\n      onAuth: null\n    };\n    this._configure(options);\n  }\n\n  setCredentials(credentials) {\n    this._credentials = credentials;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    var self = this;\n    var query = '';\n\n    self._debug('sending AJAX request to', url);\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (let i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (let headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback(true, 'JSON returned was invalid, yet status code was 200. Data was: ' + xhr.responseText);\n          }\n          if (parsed) { // prevents double execution.\n            callback(false, data);\n          }\n        } else {\n          self._log(\"Couldn't get auth info from application\", xhr.status);\n          callback(true, xhr.status);\n        }\n      }\n    };\n\n    setTimeout(function () {\n      xhr.send(JSON.stringify(data));\n    }, 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    Object.assign(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (this._config.promise !== null) {\n      this._promise = this._config.promise;\n    } else {\n      if (!global.Promise) {\n        throw new Error('Promise polyfill required');\n      }\n      this._promise = global.Promise;\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    var interval = backoff(this._retries, this._config.retry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n\n    // fire errbacks of registered outgoing calls.\n    for (let uid in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(uid)) {\n        const callbacks = this._callbacks[uid];\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback(this._createErrorObject('disconnected'));\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (let channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n          }\n          sub._setSubscribing();\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    if (!this._config.resubscribe || !this._reconnect) {\n      // completely clear connected state\n      this._subs = {};\n    }\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return;\n    }\n    if (!this._transport) {\n      throw new Error('transport not connected');\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n  }\n\n  _setupTransport() {\n    var self = this;\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      this._transport = new WebSocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = function () {\n      self._transportClosed = false;\n      self._reconnecting = false;\n      if (self._isSockjs) {\n        self._transportName = 'sockjs-' + self._transport.transport;\n        self._transport.onheartbeat = function () {\n          self._restartPing();\n        };\n      } else {\n        self._transportName = 'websocket';\n      }\n\n      self._resetRetry();\n\n      // Can omit method here due to zero value.\n      let msg = {\n        // method: self._methodType.CONNECT\n      };\n\n      if (self._credentials || self._connectData) {\n        msg.params = {};\n      }\n\n      if (self._credentials) {\n        msg.params.credentials = self._credentials;\n      }\n\n      if (self._connectData) {\n        msg.params.data = self._connectData;\n      }\n\n      self._latencyStart = new Date();\n      self._call(msg).then(function (result) {\n        self._connectResponse(self._decoder.decodeCommandResult(self._methodType.CONNECT, result));\n      }, function () {\n        self._disconnect('connect error', true);\n      });\n    };\n\n    this._transport.onerror = function (error) {\n      self._debug('transport level error', error);\n    };\n\n    this._transport.onclose = function (closeEvent) {\n      self._transportClosed = true;\n      let reason = 'connection closed';\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n\n          self._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          self._debug('reason is a plain string', reason);\n          needReconnect = reason !== 'disconnect';\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (self._config.onTransportClose !== null) {\n        self._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      self._disconnect(reason, needReconnect);\n\n      if (self._reconnect === true) {\n        self._reconnecting = true;\n        const interval = self._getRetryInterval();\n\n        self._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(function () {\n          if (self._reconnect === true) {\n            self._connect.call(self);\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = function (event) {\n      const replies = self._decoder.decodeReplies(event.data);\n      for (let i in replies) {\n        if (replies.hasOwnProperty(i)) {\n          self._debug('Received reply', replies[i]);\n          self._dispatchReply(replies[i]);\n        }\n      }\n      self._restartPing();\n    };\n  };\n\n  rpc(data) {\n    const self = this;\n    const msg = {\n      method: self._methodType.RPC,\n      params: {\n        data: data\n      }\n    };\n    const promise = this._call(msg);\n\n    return new self._promise(function (resolve, reject) {\n      promise.then(function (result) {\n        resolve(self._decoder.decodeCommandResult(self._methodType.RPC, result));\n      }, function (error) {\n        reject(error);\n      });\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    return this._callAsync(msg);\n  }\n\n  _callAsync(msg) {\n    this._addMessage(msg, true);\n  }\n\n  _call(msg) {\n    var self = this;\n\n    return new self._promise(function (resolve, reject) {\n      const id = self._addMessage(msg);\n      self._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    const reconnect = shouldReconnect || false;\n\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this._isDisconnected()) {\n      this._setStatus('disconnected');\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n      if (this._reconnecting === false) {\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask web app for connection parameters - user ID,\n    // timestamp, info and token\n    var self = this;\n\n    this._debug('refresh credentials');\n\n    if (self._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      self._refreshFailed();\n      return;\n    }\n\n    if (self._refreshTimeout !== null) {\n      clearTimeout(self._refreshTimeout);\n    }\n\n    const cb = function (error, data) {\n      if (error === true) {\n        // We don't perform any connection status related actions here as we are\n        // relying on Centrifugo that must close connection eventually.\n        self._debug('error getting connection credentials from refresh endpoint', data);\n        self._numRefreshFailed++;\n        if (self._refreshTimeout) {\n          clearTimeout(self._refreshTimeout);\n        }\n        if (self._config.refreshAttempts !== null && self._numRefreshFailed >= self._config.refreshAttempts) {\n          self._refreshFailed();\n          return;\n        }\n        self._refreshTimeout = setTimeout(function () {\n          self._refresh.call(self);\n        }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n        return;\n      }\n      self._numRefreshFailed = 0;\n      if (self._credentials === null) {\n        return;\n      }\n      self._credentials.user = data.user;\n      self._credentials.exp = data.exp;\n      if ('info' in data) {\n        self._credentials.info = data.info;\n      }\n      self._credentials.sign = data.sign;\n      if (self._isDisconnected()) {\n        self._debug('credentials refreshed, connect from scratch');\n        self._connect();\n      } else {\n        self._debug('send refreshed credentials');\n\n        const msg = {\n          method: self._methodType.REFRESH,\n          params: {\n            credentials: self._credentials\n          }\n        };\n\n        self._call(msg).then(function (result) {\n          self._refreshResponse(self._decoder.decodeCommandResult(self._methodType.REFRESH, result));\n        }, function () {\n          self._disconnect('refresh error', true);\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n    }\n  };\n\n  _subscribe(sub) {\n\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing();\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel\n      if (this._isAuthBatching) {\n        this._authChannels[channel] = true;\n      } else {\n        this.startAuthBatching();\n        this._subscribe(sub);\n        this.stopAuthBatching();\n      }\n    } else {\n      const recover = this._recover(channel);\n\n      if (recover === true) {\n        msg.params.recover = true;\n        msg.params.last = this._getLastID(channel);\n      }\n      const self = this;\n\n      this._call(msg).then(function (result) {\n        self._subscribeResponse(channel, self._decoder.decodeCommandResult(self._methodType.SUBSCRIBE, result));\n      }, function (err) {\n        self._subscribeError(err);\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _connectResponse(result) {\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    if (result.expires) {\n      const isExpired = result.expired;\n\n      if (isExpired) {\n        this._reconnecting = true;\n        this._disconnect('expired', true);\n        this._refresh();\n        return;\n      }\n    }\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    const self = this;\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(function () {\n        self._refresh.call(self);\n      }, result.ttl * 1000);\n    }\n\n    if (this._config.resubscribe) {\n      this.startBatching();\n      this.startAuthBatching();\n      for (let channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          const sub = this._subs[channel];\n          if (sub._shouldResubscribe()) {\n            this._subscribe(sub);\n          }\n        }\n      }\n      this.stopAuthBatching();\n      this.stopBatching(true);\n    }\n\n    this._restartPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n    }\n    if (this._pingInterval !== null) {\n      clearInterval(this._pingInterval);\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    const self = this;\n\n    this._pingInterval = setInterval(function () {\n      if (!self.isConnected()) {\n        self._stopPing();\n        return;\n      }\n      self.ping();\n      self._pongTimeout = setTimeout(function () {\n        self._disconnect('no ping', true);\n      }, self._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    let pubs = result.publications;\n\n    if (pubs && pubs.length > 0) {\n      // handle missed pubs.\n      pubs = pubs.reverse();\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    } else {\n      if ('last' in result) {\n        // no missed messages found so set last message id from result.\n        this._lastPubUID[channel] = result.last;\n      }\n    }\n\n    let recovered = false;\n\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n  };\n\n  _handleReply(reply) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback(result);\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        return;\n      }\n      errback(reply.error);\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('join', join);\n  };\n\n  _handleLeave(channel, leave) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('leave', leave);\n  };\n\n  _handleUnsub(channel) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.unsubscribe();\n  };\n\n  _handlePublication(channel, pub) {\n    // keep last uid received from channel.\n    this._lastPubUID[channel] = pub.uid;\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('publication', pub);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n    if (result.expires) {\n      const self = this;\n      const expired = result.expired;\n\n      if (expired) {\n        self._refreshTimeout = setTimeout(function () {\n          self._refresh.call(self);\n        }, self._config.refreshInterval + Math.round(Math.random() * 1000));\n        return;\n      }\n      this._clientID = result.client;\n      self._refreshTimeout = setTimeout(function () {\n        self._refresh.call(self);\n      }, result.ttl * 1000);\n    }\n  };\n\n  _handlePush(data) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      this._handleUnsub(channel);\n    }\n  }\n\n  _dispatchReply(reply) {\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      return;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply);\n    } else {\n      this._handlePush(reply.result);\n    }\n  };\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    this._addMessage({\n      method: this._methodType.PING\n    });\n  };\n\n  _recover(channel) {\n    return channel in this._lastPubUID;\n  };\n\n  _getLastID(channel) {\n    const lastUID = this._lastPubUID[channel];\n\n    if (lastUID) {\n      this._debug('last uid found and sent for channel', channel);\n      return lastUID;\n    }\n    this._debug('no last uid found for channel', channel);\n    return '';\n\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    const self = this;\n\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback\n    };\n    setTimeout(function () {\n      delete self._callbacks[id];\n      if (isFunction(errback)) {\n        errback(self._createErrorObject(_errorTimeout));\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message, async) {\n    let id;\n    if (!async) {\n      id = this._nextMessageId();\n      message.id = id;\n    }\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    if (!async) {\n      return id;\n    }\n    return 0;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching(flush) {\n    // stop collecting messages\n    flush = flush || false;\n    this._isBatching = false;\n    if (flush === true) {\n      this.flush();\n    }\n  };\n\n  flush() {\n    // send batched messages to Centrifuge\n    this._flush();\n  };\n\n  startAuthBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to authEndpoint when stopAuthBatching will be called\n    this._isAuthBatching = true;\n  };\n\n  stopAuthBatching() {\n    var i,\n      channel;\n\n    // create request to authEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isAuthBatching = false;\n    const authChannels = this._authChannels;\n\n    this._authChannels = {};\n    const channels = [];\n\n    for (channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const self = this;\n\n    const cb = function (error, data) {\n      if (error === true) {\n        self._debug('authorization request failed');\n        for (i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            channel = channels[i];\n            self._subscribeResponse({\n              error: 'authorization request failed',\n              body: {\n                channel: channel\n              }\n            });\n          }\n        }\n        return;\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!self._isBatching) {\n        self.startBatching();\n        batch = true;\n      }\n\n      for (i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          channel = channels[i];\n          const channelResponse = data[channel];\n\n          if (!channelResponse) {\n            // subscription:error\n            self._subscribeResponse({\n              error: 'channel not found in authorization response',\n              body: {\n                channel: channel\n              }\n            });\n            continue;\n          }\n          if (!channelResponse.status || channelResponse.status === 200) {\n            const msg = {\n              method: self._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                client: self._clientID,\n                info: channelResponse.info,\n                sign: channelResponse.sign\n              }\n            };\n            const recover = self._recover(channel);\n\n            if (recover === true) {\n              msg.params.recover = true;\n              msg.params.last = self._getLastID(channel);\n            }\n            self._call(msg).then(function (result) {\n              self._subscribeResponse(channel, self._decoder.decodeCommandResult(self._methodType.SUBSCRIBE, result));\n            }, function (err) {\n              self._subscribeError(channel, err);\n            });\n          } else {\n            self._subscribeResponse({\n              error: channelResponse.status,\n              body: {\n                channel: channel\n              }\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        self.stopBatching(true);\n      }\n\n    };\n\n    if (this._config.onAuth !== null) {\n      this._config.onAuth({\n        data: data\n      }, cb);\n    } else {\n      this._ajax(this._config.authEndpoint, this._config.authParams, this._config.authHeaders, data, cb);\n    }\n  };\n\n  subscribe(channel, events) {\n    if (arguments.length < 1) {\n      throw new Error('Illegal arguments number: required 1, got ' + arguments.length);\n    }\n    if (!isString(channel)) {\n      throw new Error('Illegal argument type: channel must be a string');\n    }\n    if (!this._config.resubscribe && !this.isConnected()) {\n      throw new Error('Can not only subscribe in connected state when resubscribe option is off');\n    }\n\n    const currentSub = this._getSub(channel);\n\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._recovered = false;\n    this._ready = false;\n    this._promise = null;\n    this._noResubscribe = false;\n    this._setEvents(events);\n    this._initializePromise();\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    var self = this;\n\n    this._ready = false;\n\n    this._promise = new Promise(function (resolve, reject) {\n      self._resolve = function (value) {\n        self._ready = true;\n        resolve(value);\n      };\n      self._reject = function (err) {\n        self._ready = true;\n        reject(err);\n      };\n    });\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publication', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publication', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing() {\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n      this._isResubscribe = true;\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._recovered = recovered;\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n\n    this.emit('error', errContext);\n    this._reject(errContext);\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._noResubscribe = true;\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext() {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: this._recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    let subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    var self = this;\n    return new self._centrifuge._promise(function (resolve, reject) {\n      self._promise.then(function () {\n        self._centrifuge._call(message).then(function (result) {\n          resolve(self._centrifuge._decoder.decodeCommandResult(type, result));\n        }, function (err) {\n          reject(err);\n        });\n      }, function (err) {\n        reject(err);\n      });\n    });\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: self.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: self.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: self.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: self.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    let replies = [];\n    const encodedReplies = data.split('\\n');\n    for (let i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","import {Centrifuge} from './centrifuge.js';\nexport default Centrifuge;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export const startsWith = function (value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport const isString = function (value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'string' || value instanceof String;\n};\n\nexport const isFunction = function (value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport const log = function (level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport const backoff = function (step, min, max) {\n  var jitter = 0.5 * Math.random();\n  var interval = min * Math.pow(2, step + 1);\n\n  if (interval > max) {\n    interval = max;\n  }\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport const errorExists = function (data) {\n  return 'error' in data && data.error !== null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}