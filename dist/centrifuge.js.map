{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7c4cd45e35d07b21682b","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js"],"names":["_errorTimeout","Centrifuge","url","options","_url","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_lastPubUID","_lastPubID","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_serverTime","_hasRecoveryChannel","_config","debug","sockjs","promise","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","_configure","token","data","params","headers","callback","query","_debug","JSON","stringify","xhr","global","XMLHttpRequest","ActiveXObject","i","hasOwnProperty","length","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","e","error","_log","setTimeout","send","arguments","WebSocket","format","_formatOverride","Error","configuration","Object","assign","indexOf","_setFormat","SockJS","newStatus","interval","reconnect","_stopPing","id","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_since","_getSince","_setSubscribing","_setUnsubscribed","_clearSubRefreshTimeout","commands","encodeCommands","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","transport","onheartbeat","_restartPingIfNoRecoveryUsed","msg","Date","_call","then","_connectResponse","decodeCommandResult","CONNECT","result","err","code","_disconnect","onerror","onclose","reason","needReconnect","closeEvent","advice","_lastMessageTime","event","_getRetryInterval","_refresh","_connect","onmessage","replies","decodeReplies","_dispatchReply","method","RPC","SEND","_callAsync","_addMessage","Promise","resolve","reject","_registerCall","isConnected","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","emit","close","_refreshFailed","cb","resp","jitter","Math","round","random","max","REFRESH","_refreshResponse","_refreshError","context","_ajax","expires","client","ttl","undefined","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","subRefreshTimeout","_subRefresh","isResubscribe","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","recover","_needRecover","lastUid","_getLastUID","from_uid","lastId","_getLastID","from_id","since","_subscribeResponse","_subscribeError","UNSUBSCRIBE","wasReconnecting","_resetRetry","getTime","time","startBatching","_shouldResubscribe","stopBatching","_startPing","ctx","latency","_isSubscribing","message","_setSubscribeError","recovered","_setSubscribeSuccess","pubs","publications","reverse","_handlePublication","last_uid","last_id","reply","join","leave","unsub","unsubscribe","resubscribe","subscribe","pub","toString","uid","push","decodePush","type","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","_handleReply","_handlePush","messages","slice","_transportSend","PING","_pingResponse","lastUID","lastID","errObject","async","_nextMessageId","_isConnected","_ping","_flush","authChannels","batch","events","currentSub","_setEvents","_isUnsubscribed","_STATE_NEW","_STATE_SUBSCRIBING","_STATE_SUCCESS","_STATE_ERROR","_STATE_UNSUBSCRIBED","Subscription","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_resolve","value","_reject","on","prototype","call","knownEvents","l","ev","successContext","_getSubscribeSuccessContext","errContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","_methodCall","PUBLISH","PRESENCE","PRESENCE_STATS","HISTORY","JsonMethodType","JsonPushType","JsonEncoder","encodedCommands","JsonDecoder","encodedReplies","split","methodType","pushType","startsWith","isFunction","log","backoff","errorExists","prefix","lastIndexOf","level","args","console","logger","apply","step","min","pow","floor"],"mappings":"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;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;QC7SgB4Q,U,GAAAA,U;QAIAC,U,GAAAA,U;QAOAC,G,GAAAA,G;QAUAC,O,GAAAA,O;QAOAC,W,GAAAA,W;AA5BT,SAASJ,UAAT,CAAoB9B,KAApB,EAA2BmC,MAA3B,EAAmC;AACxC,SAAOnC,MAAMoC,WAAN,CAAkBD,MAAlB,EAA0B,CAA1B,MAAiC,CAAxC;AACD;;AAEM,SAASJ,UAAT,CAAoB/B,KAApB,EAA2B;AAChC,MAAIA,UAAU5G,SAAV,IAAuB4G,UAAU,IAArC,EAA2C;AACzC,WAAO,KAAP;AACD;AACD,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD;;AAEM,SAASgC,GAAT,CAAaK,KAAb,EAAoBC,IAApB,EAA0B;AAC/B,MAAI3Q,OAAO4Q,OAAX,EAAoB;AAClB,QAAMC,SAAS7Q,OAAO4Q,OAAP,CAAeF,KAAf,CAAf;;AAEA,QAAIN,WAAWS,MAAX,CAAJ,EAAwB;AACtBA,aAAOC,KAAP,CAAa9Q,OAAO4Q,OAApB,EAA6BD,IAA7B;AACD;AACF;AACF;;AAEM,SAASL,OAAT,CAAiBS,IAAjB,EAAuBC,GAAvB,EAA4BhK,GAA5B,EAAiC;AACtC,MAAMJ,SAAS,MAAMC,KAAKE,MAAL,EAArB;AACA,MAAM7E,WAAW2E,KAAKmK,GAAL,CAAShK,GAAT,EAAcgK,MAAMnK,KAAKoK,GAAL,CAAS,CAAT,EAAYF,OAAO,CAAnB,CAApB,CAAjB;;AAEA,SAAOlK,KAAKqK,KAAL,CAAW,CAAC,IAAItK,MAAL,IAAe1E,QAA1B,CAAP;AACD;;AAEM,SAASqO,WAAT,CAAqBhR,IAArB,EAA2B;AAChC,SAAO,WAAWA,IAAX,IAAmBA,KAAK2B,KAAL,KAAe,IAAzC;AACD,E","file":"centrifuge.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c4cd45e35d07b21682b","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff\n} from './utils';\n\nconst _errorTimeout = 'timeout';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._lastPubUID = {};\n    this._lastPubID = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._serverTime = null;\n    this._hasRecoveryChannel = false;\n    this._config = {\n      debug: false,\n      sockjs: null,\n      promise: null,\n      minRetry: 5000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    Object.assign(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._hasRecoveryChannel = false;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback(this._createErrorObject('disconnected'));\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._since = this._getSince();\n          }\n          sub._setSubscribing();\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return;\n    }\n    if (!this._transport) {\n      throw new Error('transport not connected');\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      this._transport = new WebSocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPingIfNoRecoveryUsed();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData) {\n        msg.params = {};\n      }\n\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(result => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, result));\n      }, err => {\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = 'connection closed';\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n          this._lastMessageTime = new Date();\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._lastMessageTime = new Date();\n      const replies = this._decoder.decodeReplies(event.data);\n      for (const i in replies) {\n        if (replies.hasOwnProperty(i)) {\n          this._dispatchReply(replies[i]);\n        }\n      }\n      this._restartPingIfNoRecoveryUsed();\n    };\n  };\n\n  rpc(data) {\n    const msg = {\n      method: this._methodType.RPC,\n      params: {\n        data: data\n      }\n    };\n    return this._call(msg).then(result => this._decoder.decodeCommandResult(this._methodType.RPC, result));\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    return this._callAsync(msg);\n  }\n\n  _callAsync(msg) {\n    this._addMessage(msg, true);\n  }\n\n  _call(msg) {\n    return new global.Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    const reconnect = shouldReconnect || false;\n\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this._isDisconnected()) {\n      this._setStatus('disconnected');\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (this._reconnecting === false) {\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const cb = (resp) => {\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(result => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, result));\n        }, err => {\n          this._refreshError(err);\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), result.ttl * 1000);\n    }\n  };\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const cb = (resp) => {\n      if (resp.error || resp.status !== 200) {\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(result => {\n        this._subRefreshResponse(channel, this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, result));\n      }, err => {\n        this._subRefreshError(channel, err);\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), result.ttl * 1000);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const lastUid = this._getLastUID(channel);\n        if (lastUid) {\n          msg.params.from_uid = lastUid;\n        }\n        const lastId = this._getLastID(channel);\n        if (lastId) {\n          msg.params.from_id = lastId;\n        }\n        const since = sub._since;\n        if (since) {\n          msg.params.since = since;\n        }\n      }\n\n      this._call(msg).then(result => {\n        this._subscribeResponse(channel, this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, result));\n      }, err => {\n        this._subscribeError(err);\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _getSince() {\n    return this._serverTime;\n  }\n\n  _connectResponse(result) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._serverTime = result.time;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), result.ttl * 1000);\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPingIfNoRecoveryUsed() {\n    if (!this._hasRecoveryChannel) {\n      this._stopPing();\n      this._startPing();\n    }\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    if (result.time) {\n      this._serverTime = result.time;\n      this._hasRecoveryChannel = true;\n    }\n\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n\n    let pubs = result.publications;\n\n    if (pubs && pubs.length > 0) {\n      // handle missed pubs.\n      pubs = pubs.reverse();\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    } else {\n      if ('last_uid' in result) {\n        // no missed messages found so set last message id from result.\n        this._lastPubUID[channel] = result.last_uid;\n      }\n      if ('last_id' in result) {\n        // no missed messages found so set last message id from result.\n        this._lastPubID[channel] = result.last_id;\n      }\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), result.ttl * 1000);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback(result);\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        return;\n      }\n      errback(reply.error);\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('join', join);\n  };\n\n  _handleLeave(channel, leave) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('leave', leave);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handlePublication(channel, pub) {\n    // keep last uid received from channel.\n    if (pub.id) {\n      this._lastPubID[channel] = pub.id.toString();\n    }\n    if (pub.uid) {\n      this._lastPubUID[channel] = pub.uid;\n    }\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('publish', pub);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    }\n  }\n\n  _dispatchReply(reply) {\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      return;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply);\n    } else {\n      this._handlePush(reply.result);\n    }\n  };\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(result => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, result));\n    }, err => {\n      this._debug('ping error', err);\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    if (result && result.time) {\n      this._serverTime = result.time;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastUID(channel) {\n    const lastUID = this._lastPubUID[channel];\n\n    if (lastUID) {\n      this._debug('last uid found and sent for channel', channel);\n      return lastUID;\n    }\n    this._debug('no last uid found for channel', channel);\n    return '';\n  };\n\n  _getLastID(channel) {\n    const lastID = this._lastPubID[channel];\n\n    if (lastID) {\n      this._debug('last id found and sent for channel', channel);\n      return lastID;\n    }\n    this._debug('no last id found for channel', channel);\n    return '0';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback(this._createErrorObject(_errorTimeout));\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message, async) {\n    let id;\n    if (!async) {\n      id = this._nextMessageId();\n      message.id = id;\n    }\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    if (!async) {\n      return id;\n    }\n    return 0;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', true);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const cb = (resp) => {\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const lastUid = this._getLastUID(channel);\n              if (lastUid) {\n                msg.params.from_uid = lastUid;\n              }\n              const lastId = this._getLastID(channel);\n              if (lastId) {\n                msg.params.from_id = lastId;\n              }\n              if (sub._since) {\n                msg.params.since = sub._since;\n              }\n            }\n            this._call(msg).then(result => {\n              this._subscribeResponse(channel, this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, result));\n            }, err => {\n              this._subscribeError(channel, err);\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._since = null;\n    this._setEvents(events);\n    this._initializePromise();\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new global.Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    });\n  };\n\n  _needRecover() {\n    return this._since !== null;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this._since = null;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n\n    this.emit('error', errContext);\n    this._reject(errContext);\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._since = null;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastPubUID[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(recovered) {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    return this._subscriptionPromise\n      .then(() => this._centrifuge._call(message))\n      .then(result => this._centrifuge._decoder.decodeCommandResult(type, result))\n    ;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","import {Centrifuge} from './centrifuge.js';\nexport default Centrifuge;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}